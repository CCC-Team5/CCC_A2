# - name: System Update
#   become: yes
#   apt:
#     update_cache: yes
#     upgrade: dist

# - name: Setup Build Environment
#   become: yes
#   apt:
#     name: 
#       - build-essential 
#       - pkg-config 
#       - erlang 
#       - libicu-dev
#       - libcurl4-openssl-dev
#     state: latest
#     install_recommends: no
  
# - name: download sources continue
#   shell: sudo apt install debhelper libffi-dev libnspr4-dev pkg-kde-tools python
#   shell: make couch-js-debs PLATFORM=bionic
#   # Download libffi6
#   # shell: wget http://ftp.br.debian.org/debian/pool/main/libf/libffi/libffi6_3.2.1-6_armhf.deb
#   # # Download the libmozjs185-1.0
#   # shell: wget http://ftp.ro.debian.org/debian/pool/main/m/mozjs/libmozjs185-1.0_1.8.5-1.0.0+dfsg-6_armhf.deb
#   # # Download the libmozjs185-dev
#   # shell: wget http://ftp.br.debian.org/debian/pool/main/m/mozjs/libmozjs185-dev_1.8.5-1.0.0+dfsg-6_armhf.deb
#   # # Install libffi6
#   # shell: sudo dpkg -i libffi6_3.2.1-6_armhf.deb 
#   # # Install libmozjs185-1.0
#   # shell: sudo dpkg -i libmozjs185-1.0_1.8.5-1.0.0+dfsg-6_armhf.deb 
#   # # Install libmozjs185-dev
#   # shell: sudo dpkg -i libmozjs185-dev_1.8.5-1.0.0+dfsg-6_armhf.deb 
#   # # Fix eventual missing dependencies
#   # shell: sudo apt --fix-broken install

# - name: Download CouchDB
#   become: yes
#   get_url:
#     url: https://archive.apache.org/dist/couchdb/source/3.2.0/apache-couchdb-3.2.0.tar.gz
#     dest: /usr/local/src # download couchdb to this directory

# - name: Unpack CouchDB Source
#   become: yes
#   unarchive:
#     src: /usr/local/src/apache-couchdb-3.2.0.tar.gz
#     dest: /usr/local/src
#     remote_src: yes

# - name: Configure Build
#   become: yes
#   command: chdir=/usr/local/src/apache-couchdb-3.2.0 ./configure

# - name: Make Build
#   become: yes
#   make:
#     chdir: /usr/local/src/apache-couchdb-3.2.0
#     target: release

# - name: Deploy CouchDB #Copy couchdb to /data repository#
#   become: yes
#   command: cp -R /usr/local/src/apache-couchdb-3.2.0/rel/couchdb /data/

# - name: Add CouchDB System Account
#   become: yes
#   user:
#     name: couchdb
#     comment: "CouchDB System Account"
#     shell: /bin/bash
#     system: yes
#     home: /data/couchdb
#     createhome: no

# - name: Change CouchDB Ownership
#   become: yes
#   file:
#     path: /data/couchdb
#     owner: couchdb
#     group: couchdb
#     mode: 0770
#     recurse: yes
#     state: directory

# - name: Change CouchDB Config File Permission
#   become: yes
#   file:
#     path: /data/couchdb/etc
#     owner: couchdb
#     group: couchdb
#     mode: 0644
#     recurse: yes
#     state: directory

# - name: Change CouchDB Directory Permission 
#   become: yes
#   command: find /data/couchdb -type d -exec chmod 0770 {} \; ## find all directorys in /couchdb and chmod them to 0770

# - name: Change Node Name
#   become: yes
#   replace:
#     dest: /data/couchdb/etc/vm.args
#     regexp: '^-name couchdb@localhost$'
#     replace: '-name couchdb@{{ansible_eth0.ipv4.address}}'

# - name: Add kernel Args
#   blockinfile:
#     dest: /data/couchdb/etc/vm.args
#     insertafter: '-kernel'
#     content: | 
#       -kernel inet_dist_listen_min 9100
#       -kernel inet_dist_listen_max 9200

# - name: Set Cookie
#   become: yes
#   replace:
#     dest: /data/couchdb/etc/vm.args
#     regexp: '^-setcookie monster$'
#     replace: '-setcookie grp5mendes'

# - name: Bind Cluster/Node Address to Public
#   become: yes
#   copy:
#     src: ./files/local.ini
#     dest: /data/couchdb/etc

# - name: Add Admin User
#   become: yes
#   lineinfile:
#     dest: /data/couchdb/etc/local.ini
#     insertafter: '^\[admins\]$'
#     line: 'grp5admin = password'

# - name: Install CouchDB Serice
#   become: yes
#   copy:
#     src: ./files/couchdb.service
#     dest: /etc/systemd/system/couchdb.service
#     owner: root
#     group: root

# - name: Enable CouchDB Service
#   become: yes
#   systemd:
#     daemon-reload: yes
#     name: couchdb
#     enabled: yes

# - name: Start CouchDB Service
#   become: yes
#   systemd:
#     name: couchdb
#     state: restarted

# Stop existing Couch DB Docker containers and remove them (if any)
- name: Stop CouchDB Docker container
  become: yes
  docker_container:
    name: couchdb
    state: absent

# Create new docker container for CouchDB and start container
- name: Create and start CouchDB Docker container
  become: yes
  docker_container:
    name: couchdb
    image: "ibmcom/couchdb3"
    state: started
    recreate: true
    ports:
      - "5984:5984"
      - "4369:4369"
      - "9100-9200:9100-9200"
    volumes:
      - /data
    pull: yes
    env:
      COUCHDB_USER: "{{ user }}"
      COUCHDB_PASSWORD: "{{ pass }}"
      COUCHDB_SECRET: "{{ cookie }}"
      ERL_FLAGS: "-setcookie \"{{ cookie }}\" -name \"couchdb@{{ inventory_hostname }}\""